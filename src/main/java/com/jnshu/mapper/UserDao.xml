<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jnshu.mapper.UserDao">
    <!-- sql片段块  -->
    <!-- 判断属性是否为空,为空不设置该属性-->
    <sql id="value_not_null">
        <trim suffixOverrides=",">
            <!-- and不能大写  -->
            <if test="username!='' and username!=null">username=#{username},
            </if>
            <if test="qq!='' and qq!=null">qq=#{qq},</if>
            <if test="profession!='' and profession!=null">
                profession=#{profession},
            </if>
            <if test="join_date!='' and join_date!=null">
                join_date=#{join_date},
            </if>
            <if test="school!='' and school!=null">school=#{school},</if>
            <if test="online_id!='' and online_id!=null">
                online_id=#{online_id},
            </if>
            <if test="daily_url!='' and daily_url!=null">
                daily_url=#{daily_url},
            </if>
            <if test="declaration!='' and declaration!=null">
                declaration=#{declaration},
            </if>
            <if test="counselor!='' and counselor!=null">
                counselor=#{counselor},
            </if>
            <if test="update_time!='' and update_time!=null">
                update_time=#{update_time},
            </if>
        </trim>
    </sql>
    <!-- sql片段块end -->

    <!-- 根据id查找 -->
    <select id="findUserById" resultType="UserCustom" parameterType="Integer">
        SELECT * FROM taskone WHERE id = #{id}
    </select>


    <!-- 根据传入参数查找 -->
    <select id="findUserMore" resultType="UserCustom" parameterType="UserQv">
        SELECT * FROM taskone
        <if test="userCustom!=null">
            <where>
                <if test="userCustom.id!=0 and userCustom.id!=null">AND
                    id >= #{userCustom.id}
                </if>
                <if test="userCustom.username!='' and userCustom.username!=null">
                    AND username LIKE '%${userCustom.username}%'
                </if>
                <if test="userCustom.qq!='' and userCustom.qq!=null">AND
                    qq LIKE '%${userCustom.qq}%'
                </if>
                <if test="userCustom.profession!='' and userCustom.profession!=null">
                    AND profession LIKE '%${userCustom.profession}%'
                </if>
                <if test="userCustom.join_date!='' and userCustom.join_date!=null">
                    AND join_date >= #{userCustom.join_date}
                </if>
                <if test="userCustom.school!='' and userCustom.school!=null">AND
                    school LIKE '%${userCustom.school}%'
                </if>
                <if test="userCustom.online_id!='' and userCustom.online_id!=null">
                    AND online_id >= #{userCustom.online_id}
                </if>
                <if test="userCustom.daily_url!='' and userCustom.daily_url!=null">
                    AND daily_url LIKE '%${userCustom.daily_url}%'
                </if>
                <if test="userCustom.declaration!='' and userCustom.declaration!=null">
                    AND declaration LIKE '%${userCustom.declaration}%'
                </if>
                <if test="userCustom.counselor!='' and userCustom.counselor!=null">
                    AND counselor LIKE '%${userCustom.counselor}%'
                </if>
                <if test="userCustom.create_time!='' and userCustom.create_time!=null">
                    AND create_time >= #{userCustom.create_time}
                </if>
                <if test="userCustom.update_time!='' and userCustom.update_time!=null">
                    AND update_time >= #{userCustom.update_time} order by
                    update_time asc
                </if>
            </where>
        </if>
        <!-- id倒序 -->
    </select>
    <!-- 根据传入参数查找end -->

    <!-- 插入用户 -->
    <!-- insert into taskone(id,username,qq,profession,join_date,school,online_id,daily_url,declaration,counselor,create_time,update_time) value(2,"赵四","554564","web","2018123654","北","1554","www.baidu.com","jiayou","老王","201554633","46546")-->
    <!-- 插入时创建时间与更新时间一致 -->
    <insert id="insertUser" parameterType="User">
        INSERT INTO taskone(
        username,qq,profession,join_date,school,online_id,daily_url,declaration,counselor,create_time,update_time)
        VALUE (
        #{username},#{qq},#{profession},#{join_date},#{school},#{online_id},#{daily_url},#{declaration},#{counselor},#{create_time},#{create_time})
        <!-- 将返回的主键id 赋值给user.id -->
        <selectKey keyProperty="id" order="AFTER"
                   resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
    <!-- 插入用户end -->

    <!-- 删除用户 delete接口的返回类型设为Integer， 不需要在<delete></delete>中 定义resultType，即可自动返回受影响的行数。 -->
    <!-- jdbc:mysql://${jdbc.host}/${jdbc.db}?useAffectedRows=true 添加?useAffectedRows=true获取真实的收影响条数-->
    <delete id="deleteUser" parameterType="int">
        DELETE FROM taskone WHERE id=#{id}
    </delete>
    <!-- 删除用户end-->

    <!-- 修改用户-->
    <update id="updateUser" parameterType="UserCustom">
        UPDATE taskone SET
        <include refid="value_not_null"/>
        WHERE id=#{id}
    </update>
    <!-- 修改用户end-->

</mapper>